# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
orbs:
  heroku: circleci/heroku@0.0.10
workflows:
  build_deploy:
    jobs:
      - build
      - inheritance_security_check
      - secrets_check
      - deploy_staging:
          requires:
            - build
            - inheritance_security_check
      - vaddy:
          requires:
            - deploy_staging
      - deploy_production:
          requires:
            - vaddy

jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout
      - run: yarn install
      - run: yarn test

  inheritance_security_check:
    docker:
      - image: circleci/node
    working_directory: ~/repo
    steps:
      - run: yarn install
      - run: yarn inheritance-security-check

  secrets_check:
    docker:
      - image: circleci/node
    working_directory: ~/repo
    steps:
      - run:
          name: Installing Git Secrets
          command: |
            git clone https://github.com/sobolevn/git-secret.git git-secret
            cd git-secret && sudo make build
            sudo PREFIX="/usr/local" make install
      - run:
          name: Adding Git Secrets providers
          command: "git secrets --add-provider -- git secrets --aws-provider"
      - run:
          name: Secrets check
          command: "git secrets --scan"

  vaddy:
    docker:
      # specify the version you desire here
      - image: circleci/node
    steps:
      - run:
          name: Cloning Vaddy
          command: "git clone https://github.com/vaddy/go-vaddy.git"
      - run:
          name: Security check
          command: |
            cd ./go-vaddy/bin/
            ./vaddy-linux-64bit"

  deploy_staging:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git:
          only-branch: master
  deploy_production:
    environment:
      HEROKU_APP_NAME: production-workshop
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git:
          only-branch: master
